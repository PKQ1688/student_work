[
    {
        "input": "Is it possible to adjust the front left window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 80 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window down by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window down by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 80 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window up by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 45 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front left window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window up by 65 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window up by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear right window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear left window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front right window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the front right window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front left window up by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window down by 70 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear left window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 20 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window down by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front left window up by 25 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 50 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 50 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 100 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the rear left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 60 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 55 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the front left window down by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front right window down by 40 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the front left window down by 55 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear left window down by 100 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear right window down by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the front right window down by 35 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window down by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the rear right window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 85 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window down by 25 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear right window up by 70 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 75 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 40 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 70 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=70\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear right window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 15 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 20 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the easiest way to adjust the front right window down by 90 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear left window down by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the rear left window down by 100 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=100\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front left window up by 95 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 85 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 30 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 15 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window up by 80 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the front right window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front left window down by 50 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=50\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window down by 65 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the front left window up by 80 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=80\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the rear right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear left window up by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window down by 60 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 75 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front right window up by 75 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=75\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please adjust the rear right window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear right window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window down by 30 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=30\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "You need to adjust the rear left window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the front left window down by 15 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=down\", \"distance=15\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I am willing to adjust the front right window down by 55 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=55\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Could you help me adjust the rear right window up by 35 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I need to adjust the rear left window down by 90 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front right window down by 35 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "What's the process for adjust the rear left window down by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is it possible to adjust the front right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the rear left window up by 65 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=65\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear right window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front right window down by 20 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=down\", \"distance=20\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the rear left window down by 45 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=down\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "I want to adjust the rear right window down by 95 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window down by 85 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=down\", \"distance=85\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Is there a way to adjust the front left window up by 90 millimeters?",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=90\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How can I adjust the front right window up by 45 millimeters?",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=45\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 40 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=40\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "How do I adjust the rear left window up by 105 millimeters?",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the rear right window up by 105 millimeters.",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=105\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the front left window up by 95 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=95\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Please help me adjust the front left window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front left\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Hi, please adjust the front right window up by 25 millimeters.",
        "output": "<nexa_8>(\"window=front right\", \"position=up\", \"distance=25\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "To adjust the rear left window up by 35 millimeters.",
        "output": "<nexa_8>(\"window=rear left\", \"position=up\", \"distance=35\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    },
    {
        "input": "Can I adjust the rear right window up by 60 millimeters?",
        "output": "<nexa_8>(\"window=rear right\", \"position=up\", \"distance=60\")<nexa_end>\nFunction description: \ndef control_window(window, position, distance):\n\"\"\"\nAdjusts a vehicle window's position by a specific distance.\n\nParameters:\n- window (str): The window to control ('front left', 'front right', '\nrear left', 'rear right').\n- position (str): The direction to move the window ('up' or 'down').\n- distance (int): The distance to move the window, in millimeters.\n\nReturns:\n- bool: True if the window was adjusted successfully, False otherwise.\n\"\"\"\n"
    }
]